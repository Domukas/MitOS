/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Dimension;
import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import tdzOS.OS;
import tdzVmRm.RealMachine;
import tdzVmRm.VirtualMachine;
import tdzVmRm.Word;

/**
 *
 * @author Tomas
 */
public class RealMachineGUI extends javax.swing.JFrame {

    /**
     * Creates new form RealMachineGUI
     */
    
    RealMachine RM;
    OS os;
    JTable vm1MemoryTable;
    
    //Reikalinga nusakyti lenteles reiksmiu tipui
    TableDataTypes tableDataType = TableDataTypes.Hex;
    public enum TableDataTypes {
        Int,
        Hex,
        Char
    }
    public TableDataTypes getTableDataType(){
        return tableDataType;
    }
    
    public RealMachineGUI(RealMachine RM, OS os) {
        super("Real machine");
        initComponents();
        this.RM = RM;
        this.os = os;
        this.setVisible(true);
        for (int i = 0; i < RM.proc.length; i++)
        {
            ProcessorJPanel procPanel = new ProcessorJPanel(RM.proc[i],this);
            processorsTabbedPane.add("P"+i, procPanel);
        }
        
        updateProcessorJPanels();
        //Norim, kad adreso stulpelio dydis nesikeistu - vietos butu tiek, kiek uztenka
        memoryTable.getColumnModel().getColumn(0).setMaxWidth(32);
        memoryTable.getColumnModel().getColumn(0).setMinWidth(32);  

        MemoryTableRenderer cr=new MemoryTableRenderer();
        MemoryTableFirstColumnRenderer cfr = new MemoryTableFirstColumnRenderer(RM);
        memoryTable.getColumn(memoryTable.getColumnName(0)).setCellRenderer(cfr);
        for (int i=1;i < memoryTable.getColumnCount(); i++)
        {
            memoryTable.getColumn(memoryTable.getColumnName(i)).setCellRenderer(cr);
        }
    }
    
    private void createVMTab()
    {
        vm1MemoryTable = new JTable();
        vm1MemoryTable.setModel(new VirtualMemoryTableModel(RM,this));
        vm1MemoryTable.setFillsViewportHeight(true);
        memoryTabbedPane.add("VM1", new JScrollPane(vm1MemoryTable));
        vm1MemoryTable.setColumnSelectionAllowed(true);
        vm1MemoryTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vm1MemoryTable.getColumnModel().getColumn(0).setMaxWidth(32);
        vm1MemoryTable.getColumnModel().getColumn(0).setMinWidth(32);
        
        MemoryTableRenderer cr=new MemoryTableRenderer();
        MemoryTableFirstColumnRenderer cfr = new MemoryTableFirstColumnRenderer(RM);
        memoryTable.getColumn(memoryTable.getColumnName(0)).setCellRenderer(cfr);
        for (int i=1;i < memoryTable.getColumnCount(); i++)
        {
            vm1MemoryTable.getColumn(memoryTable.getColumnName(i)).setCellRenderer(cr);
        }
    }
    
    public void updateAll()
    {
        updateProcessorJPanels();
        this.paint(this.getGraphics());
        memoryTable.repaint();
        if (RealMachine.VM != null)
            vm1MemoryTable.repaint();
    }
    
    private void updateProcessorJPanels(){
        for (int i = 0; i < RM.proc.length; i++)
            ((ProcessorJPanel) processorsTabbedPane.getComponentAt(i)).updateFields();
    }
    
    public void showMessage(String text)
    {
        JOptionPane.showMessageDialog(this, text);
    }
    
    public String showInputMessageBox(String message)
    {
        return JOptionPane.showInputDialog(this, message);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableDataTypeButtonGroup = new javax.swing.ButtonGroup();
        operationsPanel = new javax.swing.JPanel();
        processorsTabbedPane = new javax.swing.JTabbedPane();
        buttonPanel = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        stepButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        TaskNameField = new javax.swing.JTextField();
        TaskButton = new javax.swing.JButton();
        osStepButton = new javax.swing.JButton();
        memoryTabbedPane = new javax.swing.JTabbedPane();
        memoryPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        memoryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        operationsPanel.setMaximumSize(new java.awt.Dimension(160, 550));
        operationsPanel.setPreferredSize(new java.awt.Dimension(160, 400));
        operationsPanel.setLayout(new javax.swing.BoxLayout(operationsPanel, javax.swing.BoxLayout.PAGE_AXIS));
        operationsPanel.add(processorsTabbedPane);

        buttonPanel.setMaximumSize(new java.awt.Dimension(160, 420));
        buttonPanel.setPreferredSize(new java.awt.Dimension(160, 400));
        buttonPanel.setLayout(new java.awt.GridLayout(1, 0));

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(runButton);

        stepButton.setText("Step");
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(stepButton);

        operationsPanel.add(buttonPanel);

        jPanel1.setLayout(new java.awt.BorderLayout());

        TaskNameField.setText("Name of Task");
        TaskNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaskNameFieldMouseClicked(evt);
            }
        });
        TaskNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaskNameFieldActionPerformed(evt);
            }
        });
        jPanel1.add(TaskNameField, java.awt.BorderLayout.CENTER);

        TaskButton.setText("New Task");
        TaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaskButtonActionPerformed(evt);
            }
        });
        jPanel1.add(TaskButton, java.awt.BorderLayout.PAGE_END);

        osStepButton.setText("OS step");
        osStepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                osStepButtonActionPerformed(evt);
            }
        });
        jPanel1.add(osStepButton, java.awt.BorderLayout.PAGE_START);

        operationsPanel.add(jPanel1);

        getContentPane().add(operationsPanel);

        memoryPanel.setLayout(new javax.swing.BoxLayout(memoryPanel, javax.swing.BoxLayout.LINE_AXIS));

        memoryTable.setModel(new MemoryTableModel(RM, this));
        memoryTable.setColumnSelectionAllowed(true);
        memoryTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                memoryTableInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(memoryTable);
        memoryTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        memoryPanel.add(jScrollPane1);

        memoryTabbedPane.addTab("RM", memoryPanel);

        getContentPane().add(memoryTabbedPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
        RM.VM.step();
        updateAll();
    }//GEN-LAST:event_stepButtonActionPerformed

    private void memoryTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_memoryTableInputMethodTextChanged

    }//GEN-LAST:event_memoryTableInputMethodTextChanged

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        RM.VM.run();
        updateAll();
    }//GEN-LAST:event_runButtonActionPerformed

    private void TaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaskButtonActionPerformed
            String taskName;
            taskName = TaskNameField.getText();
            File f = new File("src/tdzVmRm/"+taskName+".tdz");
            
            if(f.exists()){
                if (RealMachine.VM == null)
                {
                    if (RM.CreateVirtualMachine(taskName))
                            createVMTab();
                        else
                            showMessage("Number of blocks, assigned to virtual machine, is invalid");
                }
                else
                    RM.CreateVirtualMachine(taskName);
                
                updateAll();       
                }else{
                    showMessage("File not found.");
            }
    }//GEN-LAST:event_TaskButtonActionPerformed

    private void osStepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_osStepButtonActionPerformed
        os.step();
    }//GEN-LAST:event_osStepButtonActionPerformed

    private void TaskNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaskNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaskNameFieldActionPerformed

    private void TaskNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskNameFieldMouseClicked
        TaskNameField.setText("");
    }//GEN-LAST:event_TaskNameFieldMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TaskButton;
    private javax.swing.JTextField TaskNameField;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel memoryPanel;
    private javax.swing.JTabbedPane memoryTabbedPane;
    private javax.swing.JTable memoryTable;
    private javax.swing.JPanel operationsPanel;
    private javax.swing.JButton osStepButton;
    private javax.swing.JTabbedPane processorsTabbedPane;
    private javax.swing.JButton runButton;
    private javax.swing.JButton stepButton;
    private javax.swing.ButtonGroup tableDataTypeButtonGroup;
    // End of variables declaration//GEN-END:variables
}
